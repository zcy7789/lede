#
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2020 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#

name: OpenWrt-CI

on:
  push:
    branches: 
      - master
  # schedule:
  #   - cron: 0 20 * * *
  release:
    types: [published]

jobs:

  build_openwrt:

    name: Build OpenWrt firmware

    runs-on: ubuntu-latest

    if: github.event.repository.owner.id == github.event.sender.id

    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php* android*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          
       - name: 涡轮增雕进程
        run: |
          cd package
          mkdir openwrt-packages
          cd openwrt-packages
          git clone https://github.com/openwrt-develop/luci-theme-atmaterial.git
          git clone https://github.com/Ameykyl/luci-app-koolproxyR
          git clone https://github.com/rosywrt/luci-theme-rosy
          git clone https://github.com/kenzok8/openwrt-packages.git

          # sudo mkdir -p -m 777 /mnt/openwrt/bin /mnt/openwrt/build_dir/host /mnt/openwrt/build_dir/hostpkg /mnt/openwrt/dl /mnt/openwrt/feeds /mnt/openwrt/staging_dir
          # ln -s /mnt/openwrt/bin ./bin
          # mkdir -p ./build_dir
          # ln -s -f /mnt/openwrt/build_dir/host ./build_dir/host
          # ln -s -f /mnt/openwrt/build_dir/hostpkg ./build_dir/hostpkg
          # ln -s /mnt/openwrt/dl ./dl
          # ln -s /mnt/openwrt/feeds ./feeds
          # ln -s /mnt/openwrt/staging_dir ./staging_dir

          df -h

      - name: Update feeds
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Generate configuration file
        run: |
          rm -f ./.config*
          touch ./.config

          #========================固件定制部分========================
          # 在 cat >> .config <<EOF 到 EOF 之间粘贴你的编译配置, 需注意缩进关系
          # 例如:

          cat >> .config <<EOF
          # 修改固件编译信息:
          CONFIG_KERNEL_BUILD_USER="Prince"
          CONFIG_KERNEL_BUILD_DOMAIN="Azure"
          # 固件压缩:
          CONFIG_TARGET_IMAGES_GZIP=y
          # 取消编译VMware镜像以及镜像填充 (不要删除被缩进的注释符号):
          # # CONFIG_TARGET_IMAGES_PAD is not set
          # # CONFIG_VMDK_IMAGES is not set
          # 编译x64固件:
          CONFIG_TARGET_x86=y
          CONFIG_TARGET_x86_64=y
          CONFIG_TARGET_x86_64_Generic=y
          # 修改大小固件:
          CONFIG_TARGET_KERNEL_PARTSIZE=128
          CONFIG_TARGET_ROOTFS_PARTSIZE=3000
          # IPv6支持:
          CONFIG_PACKAGE_dnsmasq_full_dhcpv6=y
          CONFIG_PACKAGE_ipv6helper=y
          # 多文件系统支持:
          # CONFIG_PACKAGE_kmod-fs-nfs=y
          # CONFIG_PACKAGE_kmod-fs-nfs-common=y
          # CONFIG_PACKAGE_kmod-fs-nfs-v3=y
          # CONFIG_PACKAGE_kmod-fs-nfs-v4=y
          # CONFIG_PACKAGE_kmod-fs-ntfs=y
          # CONFIG_PACKAGE_kmod-fs-squashfs=y
          # USB3.0支持:
          # CONFIG_PACKAGE_kmod-usb-ohci=y
          # CONFIG_PACKAGE_kmod-usb-ohci-pci=y
          # CONFIG_PACKAGE_kmod-usb2=y
          # CONFIG_PACKAGE_kmod-usb2-pci=y
          # CONFIG_PACKAGE_kmod-usb3=y
          # 常用LuCI插件选择:
          # CONFIG_PACKAGE_luci-app-accesscontrol #访问时间控制
          # CONFIG_PACKAGE_luci-app-adblock #ADB广告过滤
          # CONFIG_PACKAGE_luci-app-adbyby-plus #广告屏蔽大师Plus +
          # CONFIG_PACKAGE_luci-app-adbyby #广告过滤大师（已弃）
          # CONFIG_PACKAGE_luci-app-adkill #广告过滤（已弃）
          # CONFIG_PACKAGE_luci-app-advanced-reboot #Linksys高级重启
          # CONFIG_PACKAGE_luci-app-ahcp #支持AHCPd
          # CONFIG_PACKAGE_luci-app-amule #aMule下载工具
          # CONFIG_PACKAGE_luci-app-aria2 # Aria2下载工具
          # CONFIG_PACKAGE_luci-app-arpbind #IP/MAC绑定
          # CONFIG_PACKAGE_luci-app-asterisk #支持Asterisk电话服务器
          # CONFIG_PACKAGE_luci-app-attendedsysupgrade #固件更新升级相关
          # CONFIG_PACKAGE_luci-app-autoreboot #支持计划重启
          # CONFIG_PACKAGE_luci-app-bcp38 #BCP38网络入口过滤(不确定)
          # CONFIG_PACKAGE_luci-app-bird4 #Bird 4(未知)
          # CONFIG_PACKAGE_luci-app-bird6 #Bird 6(未知)
          # CONFIG_PACKAGE_luci-app-bmx6 #BMX6路由协议
          # CONFIG_PACKAGE_luci-app-bmx7 #BMX7路由协议
          # CONFIG_PACKAGE_luci-app-caldav #联系人
          # CONFIG_PACKAGE_luci-app-cjdns #加密IPV6网络相关
          # CONFIG_PACKAGE_luci-app-clamav #ClamAV杀毒软件
          # CONFIG_PACKAGE_luci-app-commands #Shell命令模块
          # CONFIG_PACKAGE_luci-app-cshark #CloudShark捕获工具
          # CONFIG_PACKAGE_luci-app-ddns #动态域名 DNS
          # CONFIG_PACKAGE_luci-app-diag-core #core诊断工具
          # CONFIG_PACKAGE_luci-app-dnscrypt-proxy #DNSCrypt解决DNS污染
          # CONFIG_PACKAGE_luci-app-dnscrypt-dnsforwarder #DNSForwarder防DNS污染
          # CONFIG_PACKAGE_luci-app-dnspod #DNSPod
          # CONFIG_PACKAGE_luci-app-dump1090 #民航无线频率(不确定)
          # CONFIG_PACKAGE_luci-app-dynapoint #DynaPoint(未知)
          # CONFIG_PACKAGE_luci-app-e2guardian #Web内容过滤器
          # CONFIG_PACKAGE_luci-app-filetransfer #文件传输
          # CONFIG_PACKAGE_luci-app-firewall #添加防火墙
          # CONFIG_PACKAGE_luci-app-flowoffload #Turbo ACC FLOW转发加速
          # CONFIG_PACKAGE_luci-app-freifunk-diagnostics #freifunk组件 诊断(未知)
          # CONFIG_PACKAGE_luci-app-freifunk-policyrouting #freifunk组件 策略路由(未知)
          # CONFIG_PACKAGE_luci-app-freifunk-widgets #freifunk组件 索引(未知)
          # CONFIG_PACKAGE_luci-app-frpc #内网穿透 Frp
          # CONFIG_PACKAGE_luci-app-fwknopd #Firewall Knock Operator服务器
          # CONFIG_PACKAGE_luci-app-guest-wifi #WiFi访客网络
          # CONFIG_PACKAGE_luci-app-hd-idle #硬盘休眠
          # CONFIG_PACKAGE_luci-app-hnet #Homenet Status家庭网络控制协议
          # CONFIG_PACKAGE_luci-app-kooldns #virtual服务器 ddns替代方案（已弃）
          # CONFIG_PACKAGE_luci-app-koolproxy #KP去广告（已弃）
          # CONFIG_PACKAGE_luci-app-lxc #LXC容器管理
          # CONFIG_PACKAGE_luci-app-meshwizard #网络设置向导
          # CONFIG_PACKAGE_luci-app-minidlna #完全兼容DLNA / UPnP-AV客户端的服务器软件
          # CONFIG_PACKAGE_luci-app-mjpg-streamer #兼容Linux-UVC的摄像头程序
          # CONFIG_PACKAGE_luci-app-mmc-over-gpio #添加SD卡操作界面（已弃）
          # CONFIG_PACKAGE_luci-app-multiwan #多拨虚拟网卡（已弃）
          # CONFIG_PACKAGE_luci-app-mwan #MWAN负载均衡
          # CONFIG_PACKAGE_luci-app-mwan3 #MWAN3分流助手
          # CONFIG_PACKAGE_luci-app-n2n_v2 #N2N内网穿透 N2N v2 virtual服务
          # CONFIG_PACKAGE_luci-app-nft-qos #QOS流控 Nftables版（已弃）
          # CONFIG_PACKAGE_luci-app-ngrokc #Ngrok 内网穿透（已弃）
          # CONFIG_PACKAGE_luci-app-nlbwmon #网络带宽监视器
          # CONFIG_PACKAGE_luci-app-noddos #NodDOS Clients 阻止DDoS攻击
          # CONFIG_PACKAGE_luci-app-ntpc #NTP时间同步服务器
          # CONFIG_PACKAGE_luci-app-ocserv #OpenConnect virtual服务
          # CONFIG_PACKAGE_luci-app-olsr #OLSR配置和状态模块
          # CONFIG_PACKAGE_luci-app-olsr-services #OLSR服务器
          # CONFIG_PACKAGE_luci-app-olsr-viz #OLSR可视化
          # CONFIG_PACKAGE_luci-app-ocserv #OpenConnect virtual服务（已弃）
          # CONFIG_PACKAGE_luci-app-openvirtual #Openvirtual客户端
          # CONFIG_PACKAGE_luci-app-openvirtual-server #易于使用的Openvirtual服务器 Web-UI
          # CONFIG_PACKAGE_luci-app-oscam #OSCAM服务器（已弃）
          # CONFIG_PACKAGE_luci-app-p910nd #打印服务器模块
          # CONFIG_PACKAGE_luci-app-pagekitee #Pagekite内网穿透客户端
          # CONFIG_PACKAGE_luci-app-polipo #Polipo代理(是一个小型且快速的网页缓存代理)
          # CONFIG_PACKAGE_luci-app-pppoe-relay #PPPoE NAT穿透 点对点协议(PPP)
          # CONFIG_PACKAGE_luci-app-p p t p-server #virtual服务器 p p t p
          # CONFIG_PACKAGE_luci-app-privoxy #Privoxy网络代理(带过滤无缓存)
          # CONFIG_PACKAGE_luci-app-qos #流量服务质量(QoS)流控
          # CONFIG_PACKAGE_luci-app-radicale #CalDAV/CardDAV同步工具
          # CONFIG_PACKAGE_luci-app-ramfree #释放内存
          # CONFIG_PACKAGE_luci-app-rp-pppoe-server #Roaring Penguin PPPoE Server 服务器
          # CONFIG_PACKAGE_luci-app-samba #网络共享(Samba)
          # CONFIG_PACKAGE_luci-app-samba4 #网络共享(Samba4)
          # CONFIG_PACKAGE_luci-app-sfe #Turbo ACC网络加速(开启Fast Path转发加速)
          # CONFIG_PACKAGE_luci-app-s-s #SS兲朝上网（已弃）
          # CONFIG_PACKAGE_luci-app-s-s-libes #SS-libev服务端
          # CONFIG_PACKAGE_luci-app-shairplay #支持AirPlay功能
          # CONFIG_PACKAGE_luci-app-siitwizard #SIIT配置向导 SIIT-Wizzard
          # CONFIG_PACKAGE_luci-app-simple-adblock #简单的广告拦截
          # CONFIG_PACKAGE_luci-app-simple-softethervirtual #SoftEther virtual服务器 NAT穿透（已弃）
          # CONFIG_PACKAGE_luci-app-splash #Client-Splash是无线MESH网络的一个热点认证系统
          # CONFIG_PACKAGE_luci-app-sqm #流量智能队列管理(QOS)
          # CONFIG_PACKAGE_luci-app-squid #Squid代理服务器
          
          # CONFIG_PACKAGE_luci-app-openclash #openclash图形
          # CONFIG_PACKAGE_luci-app-advancedsetting #系统高级设置
          # CONFIG_PACKAGE_luci-theme-ifit #透明主题（适配18.06修复主机名错误）
          # CONFIG_PACKAGE_luci-theme-atmaterial #atmaterial 三合一主题（适配18.06）
          # CONFIG_PACKAGE_luci-app-aliddns #阿里云ddns
          # CONFIG_PACKAGE_luci-app-eqos #依IP地址限速
          # CONFIG_PACKAGE_luci-app-gost #隐蔽的https代理
          # CONFIG_PACKAGE_luci-app-adguardhome #去广告
          # CONFIG_PACKAGE_luci-app-smartdns #smartdns防污染
          # CONFIG_PACKAGE_luci-app-passwall #Lienol大神passwall
          # CONFIG_PACKAGE_luci-theme-argon_new #二合一适配19.07与18.06的主题
          # CONFIG_PACKAGE_luci-app-ssr-plus #Lean大神
          # CONFIG_PACKAGE_luci-theme-opentomcat #修复主机名错误（适配18.06）
          # CONFIG_PACKAGE_luci-theme-opentomato #修复主机名错误（适配18.06）
          #
          # CONFIG_PACKAGE_luci-app-S-S R-plus #S-S R兲朝上网Plus+
          # CONFIG_PACKAGE_luci-app-S-S R-plus —> Include s-s New Versiong #新SS代理
          # CONFIG_PACKAGE_luci-app-S-S R-plus —> Include V2ray #V2Ray透明代理
          # CONFIG_PACKAGE_luci-app-S-S R-plus —> Include Kcptun #Kcptun代理
          # CONFIG_PACKAGE_luci-app-S-S R-plus —> Include s-sR Server #S-S R客户端
          # CONFIG_PACKAGE_luci-app-S-S R-plus —> Include s-sR Socks and Tunnel #S-S R代理
          #
          # CONFIG_PACKAGE_luci-app-S-S R-pro #S-S R-Pro
          # CONFIG_PACKAGE_luci-app-S-S Rserver-python #s-sR Python服务器
          # CONFIG_PACKAGE_luci-app-statistics #流量监控工具
          # CONFIG_PACKAGE_luci-app-syncdial #多拨虚拟网卡(原macvlan)
          # CONFIG_PACKAGE_luci-app-tinyproxy #Tinyproxy是 HTTP(S)代理服务器
          # CONFIG_PACKAGE_luci-app-transmission #BT下载工具
          # CONFIG_PACKAGE_luci-app-travelmate #旅行路由器
          # CONFIG_PACKAGE_luci-app-ttyd #网页终端命令行
          # CONFIG_PACKAGE_luci-app-udpxy #udpxy做组播服务器
          # CONFIG_PACKAGE_luci-app-uhttpd #uHTTPd Web服务器
          # CONFIG_PACKAGE_luci-app-unbound #Unbound DNS解析器
          # CONFIG_PACKAGE_luci-app-upnp #通用即插即用UPnP(端口自动转发)
          # CONFIG_PACKAGE_luci-app-usb-printer #USB 打印服务器
          # CONFIG_PACKAGE_luci-app-v2ray-pro #V2Ray透明代理
          # CONFIG_PACKAGE_luci-app-vlmcsd #KMS服务器设置
          # CONFIG_PACKAGE_luci-app-vnstat #vnStat网络监控(图表)
          # CONFIG_PACKAGE_luci-app-virtualbypass #virtual BypassWebUI 绕过virtual设置
          # CONFIG_PACKAGE_luci-app-vsftpd #FTP服务器
          # CONFIG_PACKAGE_luci-app-watchcat #断网检测功能与定时重启
          # CONFIG_PACKAGE_luci-app-webadmin #Web管理页面设置
          # CONFIG_PACKAGE_luci-app-webshell #网页命令行终端（已弃）
          # CONFIG_PACKAGE_luci-app-wifischedule #WiFi 计划
          # CONFIG_PACKAGE_luci-app-wireguard #virtual**服务器 WireGuard状态
          # CONFIG_PACKAGE_luci-app-wireless-regdb #WiFi无线
          # CONFIG_PACKAGE_luci-app-wol #WOL网络唤醒
          # CONFIG_PACKAGE_luci-app-wrtbwmon #实时流量监测
          # CONFIG_PACKAGE_luci-app-xlnetacc #迅雷快鸟
          # CONFIG_PACKAGE_luci-app-zerotier #ZeroTier内网穿透
          
          CONFIG_PACKAGE_luci-app-aliddns=y
          # CONFIG_PACKAGE_luci-app-adbyby-plus=y
          # CONFIG_PACKAGE_luci-app-aria2=y
          # CONFIG_PACKAGE_luci-app-baidupcs-web=y
          CONFIG_PACKAGE_luci-app-docker=y
          # CONFIG_PACKAGE_luci-app-frpc=y
          # CONFIG_PACKAGE_luci-app-hd-idle=y
          # CONFIG_PACKAGE_luci-app-kodexplorer=y
          # CONFIG_PACKAGE_luci-app-minidlna=y
          # CONFIG_PACKAGE_luci-app-openvpn=y
          # CONFIG_PACKAGE_luci-app-openvpn-server=y
          # CONFIG_PACKAGE_luci-app-qbittorrent=y
          # CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Kcptun=y
          # CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Shadowsocks=y
          # CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Server=y
          # CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Socks=y
          # CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_V2ray=y
          # CONFIG_PACKAGE_luci-app-ttyd=y
          # CONFIG_PACKAGE_luci-app-v2ray-server=y
          # CONFIG_PACKAGE_luci-app-verysync=y
          # CONFIG_PACKAGE_luci-app-webadmin=y
          # CONFIG_PACKAGE_luci-app-wireguard=y
          # CONFIG_PACKAGE_luci-app-wrtbwmon=y
          CONFIG_PACKAGE_luci-app-advancedsetting=y
          
          CONFIG_PACKAGE_luci-app-eqos=y
          CONFIG_PACKAGE_luci-app-gost=y
          CONFIG_PACKAGE_luci-app-adguardhome=y
          CONFIG_PACKAGE_luci-app-smartdns=y
          CONFIG_PACKAGE_luci-app-passwall=y

          # CONFIG_PACKAGE_luci-app-ssr-plus #Lean大神
          # 常用软件包:
          CONFIG_PACKAGE_curl=y
          CONFIG_PACKAGE_htop=y
          CONFIG_PACKAGE_nano=y
          CONFIG_PACKAGE_screen=y
          CONFIG_PACKAGE_tree=y
          # CONFIG_PACKAGE_vim-fuller=y
          CONFIG_PACKAGE_wget=y
          
          # LuCI主题:
          CONFIG_PACKAGE_luci-theme-argon=y
          # CONFIG_PACKAGE_luci-theme-atmaterial=y
          CONFIG_PACKAGE_luci-theme-ifit=y
          # CONFIG_PACKAGE_luci-theme-atmaterial #atmaterial 三合一主题（适配18.06）
          CONFIG_PACKAGE_luci-theme-argon_new=y
          
          # 
          # ========================固件定制部分结束========================
          #
          EOF
          
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig
          
          # 网络配置信息，将从 zzz-default-settings 文件的第2行开始添加
          sed -i "2i # network config" ./package/lean/default-settings/files/zzz-default-settings
          # 默认 IP 地址，旁路由时不会和主路由的 192.168.1.1 冲突
          sed -i "3i uci set network.lan.ipaddr='192.168.10.254'" ./package/lean/default-settings/files/zzz-default-settings
          sed -i "4i uci set network.lan.proto='static'" ./package/lean/default-settings/files/zzz-default-settings
          sed -i "5i uci set network.lan.type='bridge'" ./package/lean/default-settings/files/zzz-default-settings
          sed -i "6i uci set network.lan.ifname='eth0'" ./package/lean/default-settings/files/zzz-default-settings
          sed -i "7i uci set network.lan.netmask='255.255.255.0'" ./package/lean/default-settings/files/zzz-default-settings
          sed -i "8i uci set network.lan.gateway='192.168.10.1'" ./package/lean/default-settings/files/zzz-default-settings
          sed -i "9i uci set network.lan.dns='192.168.10.1'" ./package/lean/default-settings/files/zzz-default-settings
          sed -i "10i uci commit network\n" ./package/lean/default-settings/files/zzz-default-settings

      - name: Make download
        run: |
          make download -j8 || make download -j1 V=s
          rm -rf $(find ./dl/ -size -1024c)
          df -h

      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h ./ --max-depth=1
          du -h /mnt/openwrt/ --max-depth=1 || true

      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      - name: Deliver buildinfo
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: Deliver package
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: Deliver firmware
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/

      - name: Upload release asset
        if: github.event == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.YOURTOKEN }}
          file: ./artifact/firmware/*
          tag: ${{ github.ref }}
          file_glob: true
